#  Solutions of Advent of Code
#  Oliver Kleemann

from time import perf_counter

from aoc_helper import *
import re

year, day = "2022", "05"


def prepare_input(file_name):
    with open(file_name, encoding='utf8') as f:

        cols = [[], [], [], [], [], [], [], [], []]
        orders = []
        for i, line in enumerate(f):
            # parse crate order per stack
            if i < 8:
                for j in range(9):
                    if line[(j * 4) + 1] != " ":
                        cols[j].append(line[(j * 4) + 1])
            # extract order in plain text
            if i > 9:
                orders.append(line)

        # parse orders from plain text into ints
        for i, order in enumerate(orders):
            order_splitted = order.split()
            orders[i] = tuple(map(int, order_splitted[1::2]))

    return cols, orders


def move(stacks, order, crane_type):
    # split order into values
    amount, f, t = order
    
    # lifts crates from stack
    crates_taken = stacks[f - 1][:amount]
    stacks[f - 1] = stacks[f - 1][amount:]

    if crane_type == "9000":
        crates_taken = crates_taken[::-1]
    elif crane_type != "9001":
        raise Exception("Unknown Crane!")

    # puts crates on target stack
    stacks[t - 1] = crates_taken + stacks[t - 1]


def solve():
    part1 = part2 = 0
    crates, commands = load_input(test=True, delimiter='\n\n')
    orders = [tuple(map(int,match)) for match in re.findall(r'(\d+) from (\d) to (\d)', commands, re.MULTILINE)]
    crates = crates.splitlines()
    stacks = []

    # parse stacks
    rows, cols = len(crates), len(crates[0]) // 4
    for col in range(0, cols):
        stack = []
        for row in range(rows, 0,-1):
            box = crates[row][1 + col*4]
            if box in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' and not None:
                stack.append(box)
            else:
                break
        stacks.append(stack)

    # part1
    for order in orders:
        move(stacks, order, crane_type="9000")
    
    print(stacks)
    part1 = "".join([col[0] for col in stacks])
    
    return part1, part2



def solve_b():
    cols, orders = prepare_input(f"Day{day}_input.txt")
    for order in orders:
        move(cols, order, crane_type="9001")

    result = ""
    for col in cols:
        result += col[0]

    return result


run_puzzle(day, year, solve)

'''
Results from AoC 2022 - Day 05
------------------------------
Day 05 - Part 1: CVCWCRTVQ
Day 05 - Part 2: CNSCZWLVT

Performance
------------------------------
Part 1: 0.068829 ms
Part 2: 0.046504 ms
------------------------------
Gesamt: 0.115333 ms


([['F', 'R', 'W'], ['P', 'W', 'V', 'D', 'C', 'M', 'H', 'T'], ['L', 'N', 'Z', 'M', 'P'], ['R', 'H', 'C', 'J'], ['B', 'T', 'Q', 'H', 'G', 'P', 'C'], ['Z', 'F', 'L', 'W', 'C', 'G'], ['C', 'G', 'J', 'Z', 'Q', 'L', 'V', 'W'], ['C', 'V', 'T', 'W', 'F', 'R', 'N', 'P'], ['V', 'S', 'R', 'G', 'H', 'W', 'J']], [(2, 4, 9), (5, 2, 9), (1, 5, 1), (3, 1, 4), (2, 4, 6), (7, 6, 9), (5, 3, 9), (1, 8, 6), (3, 2, 3), (12, 9, 3), (4, 9, 7), (15, 3, 9), (1, 1, 5), (2, 6, 5), (18, 9, 1), (6, 8, 1), (1, 8, 7), (5, 7, 2), (6, 1, 2), (7, 9, 6), (6, 1, 3), (5, 3, 9), (3, 9, 1), (1, 7, 9), (4, 2, 1), (5, 6, 3), (1, 3, 4), (1, 5, 9), (2, 9, 6), (5, 5, 9), (10, 1, 8), (4, 3, 8), (3, 4, 9), (4, 6, 9), (14, 8, 6), (1, 3, 8), (14, 9, 4), (6, 1, 6), (1, 8, 2), (3, 5, 8), (1, 8, 9), (1, 8, 1), (5, 4, 9), (1, 8, 4), (3, 9, 4), (3, 7, 5), (7, 6, 3), (7, 4, 1), (3, 9, 1), (7, 2, 3), (1, 4, 8), (8, 6, 2), (2, 7, 4), (1, 7, 4), (1, 7, 9), (1, 5, 9), (1, 9, 4), (1, 4, 2), (8, 4, 9), (1, 4, 2), (5, 9, 4), (2, 6, 9), (1, 6, 9), (1, 8, 1), (13, 3, 2), (1, 3, 9), (2, 6, 8), (1, 8, 1), (14, 1, 7), (4, 2, 1), (2, 9, 5), (3, 9, 7), (1, 8, 2), (4, 1, 5), (1, 4, 7), (3, 9, 1), (7, 7, 4), (14, 2, 8), (3, 1, 7), (3, 5, 4), (2, 1, 9), (11, 8, 9), (3, 7, 8), (3, 8, 6), (6, 4, 3), (2, 6, 8), (8, 4, 3), (3, 8, 7), (2, 8, 2), (2, 3, 9), (1, 6, 8), (5, 2, 7), (10, 9, 7), (1, 8, 5), (3, 5, 2), (6, 7, 5), (19, 7, 3), (9, 5, 9), (6, 2, 6), (2, 7, 3), (29, 3, 8), (2, 7, 9), (5, 8, 1), (12, 9, 6), (1, 3, 8), (1, 2, 7), (1, 3, 1), (10, 6, 1), (1, 6, 7), (9, 1, 9), (2, 1, 2), (12, 9, 4), (7, 6, 3), (8, 3, 7), (5, 7, 6), (19, 8, 3), (10, 4, 6), (1, 4, 6), (6, 8, 6), (1, 4, 2), (6, 6, 3), (3, 2, 7), (13, 6, 3), (1, 9, 1), (6, 1, 8), (1, 6, 5), (1, 5, 4), (3, 7, 1), (2, 1, 3), (11, 3, 8), (1, 4, 3), (3, 8, 4), (1, 7, 5), (3, 8, 9), (2, 9, 2), (7, 8, 3), (1, 7, 9), (1, 1, 4), (32, 3, 4), (1, 5, 9), (2, 8, 3), (2, 6, 4), (1, 9, 4), (1, 9, 2), (3, 3, 1), (1, 8, 6), (1, 6, 2), (1, 9, 3), (1, 1, 7), (1, 8, 7), (2, 3, 8), (1, 8, 4), (1, 1, 2), (2, 4, 8), (1, 1, 8), (26, 4, 6), (3, 8, 5), (3, 7, 6), (7, 6, 3), (18, 6, 8), (16, 8, 9), (1, 5, 1), (2, 8, 3), (3, 9, 8), (3, 6, 4), (2, 5, 4), (1, 6, 4), (2, 7, 2), (2, 3, 9), (4, 8, 3), (1, 1, 2), (6, 9, 7), (2, 2, 5), (12, 3, 1), (9, 9, 2), (10, 1, 3), (2, 5, 9), (8, 4, 7), (13, 7, 6), (6, 6, 5), (4, 5, 3), (2, 5, 4), (8, 4, 3), (1, 7, 2), (15, 2, 7), (8, 3, 7), (1, 1, 6), (7, 7, 1), (5, 1, 6), (7, 3, 2), (3, 1, 6), (12, 7, 9), (12, 9, 8), (1, 7, 1), (2, 9, 5), (1, 1, 9), (4, 4, 2), (4, 8, 4), (2, 7, 2), (4, 6, 5), (4, 8, 9), (1, 8, 4), (5, 5, 3), (5, 2, 4), (5, 9, 5), (1, 3, 6), (1, 7, 8), (12, 3, 9), (4, 2, 6), (7, 4, 9), (13, 6, 4), (3, 6, 9), (4, 4, 2), (1, 3, 4), (21, 9, 7), (4, 2, 1), (3, 5, 4), (8, 7, 6), (2, 7, 2), (11, 4, 2), (1, 9, 7), (1, 5, 7), (1, 1, 8), (5, 2, 5), (1, 3, 5), (2, 4, 9), (3, 4, 8), (3, 1, 8), (1, 9, 6), (8, 7, 8), (9, 6, 5), (1, 9, 6), (1, 6, 4), (3, 7, 5), (1, 6, 9), (12, 5, 1), (2, 5, 8), (1, 9, 6), (2, 7, 6), (9, 1, 8), (1, 6, 9), (1, 9, 2), (1, 4, 2), (2, 6, 7), (5, 8, 3), (2, 7, 4), (16, 8, 5), (2, 3, 8), (7, 5, 1), (3, 3, 8), (7, 5, 7), (4, 5, 2), (6, 7, 9), (2, 9, 6), (2, 9, 2), (1, 6, 8), (12, 2, 6), (2, 9, 6), (1, 5, 2), (3, 5, 4), (9, 2, 6), (6, 8, 3), (1, 7, 5), (1, 6, 7), (1, 7, 8), (1, 5, 8), (5, 1, 2), (3, 4, 5), (4, 6, 8), (5, 2, 9), (5, 8, 4), (1, 1, 4), (9, 8, 4), (1, 2, 3), (3, 6, 8), (4, 9, 2), (2, 6, 4), (2, 3, 1), (4, 4, 7), (6, 4, 5), (10, 6, 8), (4, 1, 9), (4, 7, 5), (3, 3, 9), (6, 9, 8), (2, 2, 9), (8, 4, 3), (2, 2, 7), (1, 4, 9), (6, 3, 8), (2, 7, 8), (6, 5, 9), (5, 5, 6), (2, 5, 9), (7, 9, 5), (2, 1, 9), (6, 5, 8), (1, 5, 1), (2, 3, 6), (1, 3, 6), (4, 9, 5), (1, 3, 4), (1, 1, 2), (1, 2, 1), (1, 6, 8), (14, 8, 5), (6, 5, 1), (16, 8, 3), (2, 8, 2), (10, 6, 7), (1, 6, 9), (2, 2, 9), (2, 7, 3), (1, 8, 5), (3, 9, 1), (4, 9, 5), (9, 3, 8), (2, 3, 6), (5, 3, 8), (1, 4, 2), (12, 8, 4), (1, 8, 9), (4, 5, 9), (7, 7, 1), (10, 5, 2), (2, 5, 2), (1, 6, 5), (2, 5, 2), (5, 2, 6), (4, 9, 6), (6, 4, 9), (2, 3, 4), (6, 4, 7), (6, 7, 5), (10, 1, 5), (4, 1, 2), (4, 6, 3), (6, 9, 7), (2, 4, 9), (7, 7, 6), (1, 9, 7), (2, 9, 8), (2, 8, 2), (1, 2, 5), (3, 8, 4), (4, 2, 7), (3, 4, 7), (2, 3, 5), (2, 3, 2), (18, 5, 3), (6, 3, 1), (8, 3, 1), (8, 7, 9), (9, 2, 5), (3, 2, 3), (7, 3, 7), (3, 6, 4), (1, 7, 1), (7, 6, 7), (1, 2, 9), (1, 4, 2), (13, 7, 2), (10, 5, 3), (1, 2, 9), (7, 1, 5), (8, 9, 5), (1, 9, 5), (1, 9, 8), (1, 8, 2), (8, 5, 3), (18, 3, 5), (2, 4, 1), (3, 2, 5), (27, 5, 1), (17, 1, 5), (2, 2, 3), (1, 6, 5), (2, 2, 5), (1, 6, 4), (1, 6, 9), (2, 3, 5), (17, 5, 6), (1, 9, 3), (6, 2, 4), (1, 3, 2), (3, 4, 9), (1, 2, 9), (1, 4, 7), (3, 5, 2), (2, 5, 1), (1, 5, 2), (1, 7, 3), (18, 1, 4), (1, 3, 1), (5, 4, 2), (1, 5, 1), (9, 2, 7), (1, 4, 5), (1, 2, 9), (8, 6, 2), (13, 4, 2), (2, 4, 9), (1, 5, 2), (1, 6, 8), (6, 7, 5), (1, 8, 4), (1, 7, 6), (1, 6, 1), (7, 6, 5), (1, 7, 9), (6, 9, 3), (2, 9, 7), (2, 5, 7), (4, 7, 8), (4, 5, 4), (1, 6, 7), (3, 3, 8), (6, 5, 9), (2, 3, 5), (4, 4, 7), (1, 3, 1), (2, 2, 3), (6, 9, 6), (1, 7, 1), (19, 2, 4), (2, 5, 6), (2, 8, 9), (2, 1, 2), (2, 2, 5), (2, 4, 3), (4, 6, 2), (1, 7, 8), (6, 1, 8), (3, 5, 1), (5, 2, 5), (1, 6, 7), (9, 8, 1), (2, 3, 6), (4, 6, 5), (1, 6, 2), (9, 5, 2), (3, 4, 6), (12, 4, 6), (1, 9, 4), (1, 3, 1), (3, 4, 8), (1, 3, 6), (6, 6, 2), (1, 4, 5), (3, 6, 2), (4, 1, 5), (1, 5, 1), (2, 8, 9), (7, 6, 3), (1, 3, 1), (1, 8, 1), (3, 8, 9), (4, 3, 5), (3, 7, 3), (5, 3, 7), (1, 9, 1), (4, 9, 2), (15, 2, 7), (14, 1, 7), (5, 5, 1), (9, 7, 2), (1, 9, 6), (1, 7, 4), (1, 4, 6), (2, 6, 2), (9, 2, 5), (4, 2, 4), (4, 7, 5), (6, 5, 9), (7, 1, 8), (6, 2, 8), (1, 1, 2), (3, 9, 5), (18, 7, 8), (2, 4, 6), (2, 4, 6), (3, 7, 6), (3, 5, 3), (1, 2, 6), (5, 6, 8), (29, 8, 1), (2, 3, 5), (25, 1, 6), (2, 9, 5), (1, 7, 8), (6, 8, 2), (1, 9, 1), (15, 6, 8), (1, 3, 8), (14, 8, 7), (5, 1, 3), (1, 6, 2), (2, 5, 7), (10, 6, 2), (4, 5, 7), (6, 5, 1), (2, 1, 4), (19, 7, 9)])
'''